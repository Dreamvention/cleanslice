//
// Autogenerated by `prisma-import`
// Any modifications will be overwritten on subsequent runs.
//

//
// files.prisma
//

model File {
  id          String   @id
  teamId      String
  team        Team     @relation(fields: [teamId], references: [id])
  name        String
  contentType String
  path        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

//
// prisma.prisma
//

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider         = "prisma-client-js"
  previewFeatures  = ["views"]
  binaryTargets    = ["native", "darwin-arm64", "rhel-openssl-3.0.x"]
  connect_timeout  = 10
  connection_limit = 20
}

//
// apiKeys.prisma
//

model ApiKey {
  id         String   @id
  teamId     String
  team       Team     @relation(fields: [teamId], references: [id])
  name       String
  secret     String   @unique
  lastUsedAt DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

//
// teams.prisma
//

model Team {
  id        String   @id
  codename  String   @default("")
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  apiKeys   ApiKey[]
  files     File[]
  teamUsers TeamUser[]
}

model TeamUser {
  id        String   @id
  teamId    String
  team      Team     @relation(fields: [teamId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//
// users.prisma
//

model User {
  id                    String   @id
  name                  String
  email                 String
  emailError            Boolean? @default(false)
  emailErrorDescription String?  @default("")
  emailNotifications    Boolean? @default(true)
  roles                 String[] @default([])
  verified              Boolean  @default(false)
  banned                Boolean  @default(false)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  //Used only by Basic Auth
  password                   String?   @default("")
  emailConfirmed             Boolean?  @default(false)
  emailConfirmationToken     String?   @default("")
  emailConfirmationExpiresAt DateTime?

  teams     Team[]
  teamUsers TeamUser[]
}
